name: test-all

on:
    workflow_dispatch:
    pull_request:

jobs:
  prepare_package_for_release:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Use Node.js 18
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --non-interactive
      - name: "Set new react-native version and commit changes"
        run: |
          LATEST=false
          DRYRUN=true
          VERSION=$(grep '"version"' package.json | cut -d '"' -f 4 | head -1)
          echo "Using the version from the package.json: $VERSION"
          node ./scripts/prepare-package-for-release.js -v "$VERSION" -l $LATEST --dry-run $DRYRUN
  prepare_hermes_workspace:
    runs-on: ubuntu-latest
    env:
      HERMES_WS_DIR: /tmp/hermes
      HERMES_VERSION_FILE: packages/react-native/sdks/.hermesversion
      BUILD_FROM_SOURCE: true
    outputs:
      react-native-version: ${{ steps.react-native-version.outputs.version }}
      hermes-version: ${{ steps.hermes-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Use Node.js 18
        uses: actions/setup-node@v4.0.0
        with:
          node-version: 18
          cache: 'yarn'
      - name: Cache hermes workspace
        uses: actions/cache@v4.0.0
        with:
          path: /tmp/hermes
          key: hermes
      - name: Setup hermes version
        id: hermes-version
        run: |
          mkdir -p "/tmp/hermes" "/tmp/hermes/download" "/tmp/hermes/hermes"

          if [ -f "$HERMES_VERSION_FILE" ]; then
            echo "Hermes Version file found! Using this version for the build:"
            echo "VERSION=$(cat $HERMES_VERSION_FILE)" >> "$GITHUB_OUTPUT"
          else
            echo "Hermes Version file not found!!!"
            echo "Using the last commit from main for the build:"
            HERMES_TAG_SHA=$(git ls-remote https://github.com/$GITHUB_REPOSITORY main | cut -f 1 | tr -d '[:space:]')
            echo "VERSION=$HERMES_TAG_SHA" >> "$GITHUB_OUTPUT"
          fi
          echo "Hermes commit is $HERMES_TAG_SHA"
      - name: Get react-native version
        id: react-native-version
        run: |
          VERSION=$(cat packages/react-native/package.json | jq -r '.version')
          # Save the react native version we are building in an output variable so we can use that file as part of the cache key.
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          echo "React Native Version is $VERSION"
      - name: Cache hermes workspace
        uses: actions/cache@v4.0.0
        with:
          path: |
            /tmp/hermes/download/
            /tmp/hermes/hermes/
          key: v5-hermes-${{ github.job }}-${{ steps.hermes-version.outputs.version }}
      - name: Yarn- Install Dependencies
        if: ${{ contains(github.event.head_commit.message, 'Bump metro@') }}
        run: yarn install --non-interactive
      - name: Download Hermes tarball
        run: |
          node packages/react-native/scripts/hermes/prepare-hermes-for-build ${{ github.event.pull_request.html_url }}
          cp packages/react-native/sdks/download/* $HERMES_WS_DIR/download/.
          cp -r packages/react-native/sdks/hermes/* $HERMES_WS_DIR/hermes/.

          echo ${{ steps.hermes-version.outputs.version }}
      
  build_hermesc_apple:
    runs-on: macos-12
    needs: prepare_hermes_workspace
    env:
      HERMES_WS_DIR: /tmp/hermes
      HERMES_TARBALL_ARTIFACTS_DIR: /tmp/hermes/hermes-runtime-darwin
    steps:
      - name: Cache hermes workspace
        uses: actions/cache@v4.0.0
        with:
          path: /tmp/hermes
          key: hermes
      - name: Restore git cache
        uses: actions/cache/restore@v4.0.0
        with:
          path: .git
          key: v1-checkout-checkout-${{ runner.arch }}-${{ github.ref }}-${{ github.sha }}
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Save git cache
        uses: actions/cache/save@v4.0.0
        with:
          path: .git
          key: v1-checkout-checkout-${{ runner.arch }}-${{ github.ref }}-${{ github.sha }}
      - name: Setup Hermes workspace
        uses: ./.github/actions/setup_hermes_workspace
      - name: Hermes apple cache
        uses: actions/cache@v4.0.0
        with:
          path: ./packages/react-native/sdks/hermes/build_host_hermesc
          key: v2-hermesc-apple-${{ needs.prepare_hermes_workspace.outputs.hermes-version }}-${{ needs.prepare_hermes_workspace.outputs.react-native-version }}
      - name: "Build HermesC Apple"
        run: |
          cd ./packages/react-native/sdks/hermes || exit 1
          . ./utils/build-apple-framework.sh
          build_host_hermesc_if_needed
  build_apple_slices_hermes:
    runs-on: macos-12
    needs: [build_hermesc_apple, prepare_hermes_workspace]
    env:
      HERMES_WS_DIR: /tmp/hermes
      HERMES_TARBALL_ARTIFACTS_DIR: /tmp/hermes/hermes-runtime-darwin
      HERMES_OSXBIN_ARTIFACTS_DIR: /tmp/hermes/osx-bin
    strategy:
      matrix:
        flavor: [Debug, Release]
        slice: [macosx, iphoneos, iphonesimulator, catalyst]
    steps:
      - name: Cache hermes workspace
        uses: actions/cache@v4.0.0
        with:
          path: /tmp/hermes
          key: hermes
      - name: Restore git cache
        uses: actions/cache/restore@v4.0.0
        with:
          path: .git
          key: v1-checkout-checkout-${{ runner.arch }}-${{ github.ref }}-${{ github.sha }}
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Save git cache
        uses: actions/cache/save@v4.0.0
        with:
          path: .git
          key: v1-checkout-checkout-${{ runner.arch }}-${{ github.ref }}-${{ github.sha }}
      - name: Setup Hermes workspace
        uses: ./.github/actions/setup_hermes_workspace
      - name: Hermes apple cache
        uses: actions/cache@v4.0.0
        with:
          path: ./packages/react-native/sdks/hermes/build_host_hermesc
          key: v2-hermesc-apple-${{ needs.prepare_hermes_workspace.outputs.hermes-version }}-${{ needs.prepare_hermes_workspace.outputs.react-native-version }}
      - name: Slice cache
        uses: actions/cache@v4.0.0
        with:
          path: ./packages/react-native/sdks/hermes/build_${{ matrix.slice }}_${{ matrix.flavor }}
          key: v4-hermes-apple-${{ needs.prepare_hermes_workspace.outputs.hermes-version}}-${{ needs.prepare_hermes_workspace.outputs.react-native-version }}-${{ hashfiles('packages/react-native/sdks/hermes-engine/utils/build-apple-framework.sh') }}-${{ matrix.slice }}-${{ matrix.flavor }}
      - name: Build the Hermes ${{ matrix.slice }} frameworks
        run: |
          cd ./packages/react-native/sdks/hermes || exit 1
          SLICE=${{ matrix.slice }}
          FLAVOR=${{ matrix.flavor }}
          FINAL_PATH=build_"$SLICE"_"$FLAVOR"
          echo "Final path for this slice is: $FINAL_PATH"

          if [[ -d "$FINAL_PATH" ]]; then
            echo "[HERMES] Skipping! Found the requested slice at $FINAL_PATH".
            exit 0
          fi

          if [[ "$SLICE" == "macosx" ]]; then
            echo "[HERMES] Building Hermes for MacOS"
            BUILD_TYPE="${{ matrix.flavor }}" ./utils/build-mac-framework.sh
          else
            echo "[HERMES] Building Hermes for iOS: $SLICE"
            BUILD_TYPE="${{ matrix.flavor }}" ./utils/build-ios-framework.sh "$SLICE"
          fi

          echo "Moving from build_$SLICE to $FINAL_PATH"
          mv build_"$SLICE" "$FINAL_PATH"

          # check whether everything is there
          if [[ -d "$FINAL_PATH/API/hermes/hermes.framework" ]]; then
            echo "Successfully built hermes.framework for $SLICE in $FLAVOR"
          else
            echo "Failed to built hermes.framework for $SLICE in $FLAVOR"
            exit 1
          fi

          if [[ -d "$FINAL_PATH/API/hermes/hermes.framework.dSYM" ]]; then
            echo "Successfully built hermes.framework.dSYM for $SLICE in $FLAVOR"
          else
            echo "Failed to built hermes.framework.dSYM for $SLICE in $FLAVOR"
            echo "Please try again"
            exit 1
          fi